{"version":3,"file":"PasswordHelp.container.js","sources":["../src/common/Logo.js","../node_modules/uuid/lib/rng-browser.js","../node_modules/uuid/lib/bytesToUuid.js","../node_modules/uuid/v4.js","../src/common/FormField.js","../src/auth/PasswordHelp.js","../src/auth/types.js","../src/auth/actions.js","../src/auth/constants.js","../src/auth/mutations.js","../src/auth/PasswordHelp.container.js"],"sourcesContent":["import React from 'react'\nimport './Logo.css'\nimport logo from './logo.png'\n\nconst Logo = props =>\n    <img className='attainiaLogo' alt='attainia logo' src={logo.src} {...props} />\n\nexport default Logo\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","/* Not sure when eslint-plugin-react will fix their issue https://github.com/yannickcr/eslint/eslint-plugin-react/issues/1187 */\n/* eslint \"react/jsx-indent-props\": \"off\" */\n\nimport {pickBy, isNil, complement} from 'ramda'\nimport React from 'react'\nimport {Field} from 'redux-form'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid/v4'\n\nimport './FormField.css'\n\nconst isCheck = type => /checkbox/i.test(type)\nconst isNotNil = complement(isNil)\n\nexport const InputField = props => (\n    /textarea/i.test(props.type) ?\n        <textarea className='formField' {...props} /> :\n        <input checked className='formField' {...props} />\n)\n\nInputField.propTypes = {\n    id: PropTypes.string,\n    label: PropTypes.string,\n    type: PropTypes.oneOf([\n        'checkbox',\n        'color',\n        'date',\n        'email',\n        'month',\n        'number',\n        'password',\n        'radio',\n        'reset',\n        'search',\n        'submit',\n        'tel',\n        'text',\n        'textarea',\n        'url',\n        'week'\n    ])\n}\n\nInputField.defaultProps = {\n    type: 'text'\n}\n\nexport const FormField = ({\n    handlers, input, id, meta: {touched, error}, label, name, placeholder, type, value, className\n}) =>\n    <div className={`formGroup ${className}${isCheck(type) ? ' squareCheckbox' : ''}`}>\n        {label && !isCheck(type) ? <label htmlFor={id}>{label}</label> : null}\n        <InputField {...pickBy(isNotNil, {id, value, type, placeholder, name, ...input, ...handlers})} />\n        {label && isCheck(type) ? <label htmlFor={id}><span>{label}</span></label> : null}\n        {touched && error ? <div className={`${touched && error ? 'fieldError' : ''}`}>{error}</div> : null}\n    </div>\n\nFormField.propTypes = {\n    handlers: PropTypes.shape({\n        onBlur: PropTypes.func,\n        onChange: PropTypes.func,\n        onDragStart: PropTypes.func,\n        onDrop: PropTypes.func,\n        onFocus: PropTypes.func,\n        onUpdate: PropTypes.func\n    }),\n    meta: PropTypes.shape({\n        active: PropTypes.bool,\n        checked: PropTypes.bool,\n        dirty: PropTypes.bool,\n        error: PropTypes.arrayOf(PropTypes.string),\n        invalid: PropTypes.bool,\n        pristine: PropTypes.bool,\n        touched: PropTypes.bool,\n        valid: PropTypes.bool,\n        visited: PropTypes.bool\n    }),\n    className: PropTypes.string,\n    input: PropTypes.element,\n    label: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    placeholder: PropTypes.string,\n    type: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.number,\n        PropTypes.string\n    ])\n}\n\nFormField.defaultProps = {\n    meta: {},\n    handlers: {}\n}\n\nconst ReduxFormField = props =>\n    <Field\n        name={props.name}\n        component={FormField}\n        {...props}\n    />\n\nReduxFormField.propTypes = {\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string\n}\n\nReduxFormField.defaultProps = {\n    id: uuid()\n}\n\nexport default ReduxFormField\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport './PasswordHelp.css'\nimport Logo from '../common/Logo'\nimport ReduxFormField from '../common/FormField'\n\nconst PasswordHelp = ({handleSubmit, tryPasswordHelp, email, cancel}) =>\n    <form className='passwordHelpForm' onSubmit={handleSubmit(tryPasswordHelp)}>\n        <Logo />\n        <ReduxFormField className='email' placeholder='email' name='email' type='email' value={email} />\n        <button className='passwordHelpButton' type='submit'>Reset Password</button>\n        <button className='cancelButton' type='button' onClick={cancel}>Cancel</button>\n    </form>\n\nPasswordHelp.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n    tryPasswordHelp: PropTypes.func.isRequired,\n    email: PropTypes.string\n}\n\nexport default PasswordHelp\n","export default {\n    CANCEL: 'awc_cancel',\n    ERROR: 'awc_error',\n    CLEAR_LOGIN: 'awc_clear_login',\n    GOTO_PASSWORD_HELP: 'awc_goto_password_help',\n    GOTO_REGISTRATION: 'awc_goto_registration',\n    GOTO_APP_REGISTRATION: 'awc_goto_app_registration',\n    PASSWORD_HELP: 'awc_password_help',\n    REGISTER_SUPER_USER: 'awc_register_super_user',\n    REGISTER_USER: 'awc_register_user',\n    REGISTER_APP: 'awc_register_app',\n    LOGIN: 'awc_login',\n    LOGOUT: 'awc_logout'\n}\n","import types from './types'\n\nexport const cancel = () =>\n    ({type: types.CANCEL})\nexport const handleError = (error) =>\n    ({error, type: types.ERROR})\nexport const gotoPasswordHelp = () =>\n    ({type: types.GOTO_PASSWORD_HELP})\nexport const gotoRegistration = () =>\n    ({type: types.GOTO_REGISTRATION})\nexport const gotoAppRegistration = () =>\n    ({type: types.GOTO_APP_REGISTRATION})\nexport const passwordHelp = email =>\n    ({email, type: types.PASSWORD_HELP})\nexport const registerUser = user =>\n    ({user, type: types.REGISTER_USER})\nexport const registerSuperUser = user =>\n    ({user, type: types.REGISTER_SUPER_USER})\nexport const registerApp = app =>\n    ({app, type: types.REGISTER_APP})\nexport const login = user =>\n    ({user, type: types.LOGIN})\nexport const logout = () =>\n    ({type: types.LOGOUT})\n","/* eslint \"max-len\": \"off\" */\n\nimport LocalizedStrings from 'react-localization'\n\nconst PASSWORD_PATTERN = new RegExp(/^([A-Z]|[a-z])([a-z]|[0-9]|[!@#$%^&*()[\\];:,.<>?*^+=_-]){6,50}$/)\n\nexport default {\n    PASSWORD_PATTERN,\n    passwordHelp: {\n        messages: new LocalizedStrings({\n            en: {\n                'required.email': 'Please enter your email'\n            },\n            fr: {\n                'required.email': 'Entrez votre adresse e-mail'\n            },\n            es: {\n                'required.email': 'Por favor, introduzca su dirección de correo electrónico'\n            }\n        }),\n        rules: {\n            email: 'required'\n        }\n    },\n    login: {\n        messages: new LocalizedStrings({\n            en: {\n                'required.email': 'Please enter your email',\n                'required.password': 'Please enter your password'\n            },\n            fr: {\n                'required.email': 'Entrez votre adresse e-mail',\n                'required.password': 's\\'il vous plait entrez votre mot de passe'\n            },\n            es: {\n                'required.email': 'Por favor, introduzca su dirección de correo electrónico',\n                'required.password': 'Por favor, introduzca su contraseña'\n            }\n        }),\n        rules: {\n            email: 'required',\n            password: 'required'\n        }\n    },\n    registerApplication: {\n        messages: new LocalizedStrings({\n            en: {\n                'required.name': 'Please enter your name',\n                'required.redirect': 'Please enter a URL'\n            },\n            fr: {\n                'required.name': 'S\\'il vous plaît entrez votre nom',\n                'required.redirect': 'Entrez une URL'\n            },\n            es: {\n                'required.name': 'por favor, escriba su nombre',\n                'required.redirect': 'Ingrese una URL'\n            }\n        }),\n        rules: {\n            name: 'required',\n            redirect: 'required'\n        }\n    },\n    registerUser: {\n        messages: new LocalizedStrings({\n            en: {\n                'required.name': 'Please enter your name',\n                'required.email': 'Please enter your email address',\n                'email.email': 'Invalid email address',\n                'required.password': 'Please enter your password',\n                'regex.password': 'Passwords should be greater than 6 alphanumeric characters. Some special characters are allowed.'\n            },\n            fr: {\n                'required.name': 'S\\'il vous plaît entrez votre nom',\n                'required.email': 'Entrez votre adresse e-mail',\n                'email.email': 'Adresse e-mail invalide',\n                'required.password': 's\\'il vous plait entrez votre mot de passe',\n                'regex.password': 'Les mots de passe doivent être supérieurs à 6 caractères. Algunos caracteres especiales están permitidos.'\n            },\n            es: {\n                'required.name': 'por favor, escriba su nombre',\n                'required.email': 'Por favor, introduzca su dirección de correo electrónico',\n                'email.email': 'Dirección de correo electrónico no válida',\n                'required.password': 'Por favor, introduzca su contraseña',\n                'regex.password': 'Las contraseñas deben tener más de 6 caracteres. Certains caractères spéciaux sont autorisés.'\n            }\n        }),\n        rules: {\n            name: 'required',\n            password: ['required', `regex:${PASSWORD_PATTERN}`],\n            email: 'required|email'\n        }\n    }\n}\n","import {gql} from 'react-apollo'\n\nexport const LOGIN_USER = gql`\n    mutation loginUser($email: String!, $password: String!) {\n        loginUser(email: $email, password: $password) {\n            id\n            email\n            is_active\n            last_login\n            roles\n            token {\n                access_token\n                expires_in\n                token_type\n                scope\n                redirect_uri\n            }\n        }\n    }\n`\nexport const LOGOUT_USER = gql`\n    mutation logoutUser($token: String!) {\n        logoutUser(token: $token)\n    }\n`\nexport const PASSWORD_RESET = gql`\n    mutation passwordReset($email: String!) {\n        passwordReset(email: $email)\n    }\n`\nexport const REFRESH_TOKEN = gql`\n    mutation refreshUser($token: String!) {\n        refreshUser(token: $token) {\n            access_token\n            expires_in\n            token_type\n            scope\n        }\n    }\n`\nexport const REGISTER_APP = gql`\n    mutation registerApp($name: String!, $redirectUri: String!) {\n        registerApp(name: $name, redirectUri: $redirectUri) {\n            name\n            redirect_uri\n            client_id\n            client_secret\n        }\n    }\n`\nexport const REGISTER_USER = gql`\n    mutation registerUser($email: String!, $password: String!, $name: String!) {\n        registerUser(email: $email, password: $password, name: $name)\n    }\n`\nexport const REGISTER_SUPER_USER = gql`\n    mutation registerSuperUser($email: String!, $password: String!) {\n        registerSuperUser(email: $email, password: $password)\n    }\n`\n","import {path} from 'ramda'\nimport {connect} from 'react-redux'\nimport {reduxForm} from 'redux-form'\nimport {graphql} from 'react-apollo'\nimport Validator from 'validatorjs'\n\nimport PasswordHelp from './PasswordHelp'\nimport {handleError, cancel, passwordHelp} from './actions'\nimport constants from './constants'\nimport {PASSWORD_RESET} from './mutations'\n\nconst {passwordHelp: {rules, messages}} = constants\n\nconst validate = (values) => {\n    const validator = new Validator(values, rules, messages)\n    validator.passes()\n    return validator.errors.all()\n}\n\nconst mapStateToProps = store => ({\n    email: path(['auth', 'user', 'email'], store)\n})\n\nconst mapDispatchToProps = dispatch => ({\n    cancel() {\n        return dispatch(cancel())\n    },\n    handleError(error) {\n        return dispatch(handleError(error))\n    },\n    passwordHelp(user) {\n        return dispatch(passwordHelp(user))\n    }\n})\n\nconst FormedPasswordHelp = reduxForm({\n    validate,\n    fields: ['email'],\n    form: 'PasswordHelpForm'\n})(PasswordHelp)\n\nconst PasswordHelpWithData = graphql(PASSWORD_RESET, {\n    props: ({mutate, ownProps}) => ({\n        async tryPasswordHelp(user) {\n            try {\n                const {data: {error, passwordReset}} = await mutate({variables: user})\n                if (error) {\n                    throw new Error(error)\n                }\n                if (passwordReset) ownProps.passwordHelp(user)\n            } catch (err) {\n                ownProps.handleError(err)\n            }\n        }\n\n    })\n})(FormedPasswordHelp)\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(PasswordHelpWithData)\n"],"names":["Logo","logo","src","props","global","rng","bytesToUuid","isCheck","test","type","isNotNil","complement","isNil","InputField","propTypes","PropTypes","string","oneOf","defaultProps","FormField","handlers","input","id","meta","touched","error","label","name","placeholder","value","className","pickBy","shape","func","bool","arrayOf","element","oneOfType","number","ReduxFormField","isRequired","uuid","PasswordHelp","handleSubmit","tryPasswordHelp","email","cancel","types","CANCEL","handleError","ERROR","passwordHelp","PASSWORD_HELP","PASSWORD_PATTERN","RegExp","LocalizedStrings","LOGIN_USER","gql","LOGOUT_USER","PASSWORD_RESET","REFRESH_TOKEN","REGISTER_APP","REGISTER_USER","REGISTER_SUPER_USER","constants","rules","messages","validate","values","validator","Validator","passes","errors","all","mapDispatchToProps","dispatch","user","FormedPasswordHelp","reduxForm","PasswordHelpWithData","graphql","mutate","ownProps","variables","data","passwordReset","Error","err","connect"],"mappings":"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"}